<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <Description>DashCI</Description>
    <TargetFramework>netstandard2.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>.\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <SpaIncludes>$(SpaRoot)app;$(SpaRoot)package.json;$(SpaRoot)tsconfig.json;</SpaIncludes>
    <OutputType>Library</OutputType>
  </PropertyGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaIncludes)" />
    <None Include="$(SpaIncludes)" />
  </ItemGroup>


  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'yarn'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn install" />
  </Target>

  <Target Name="RunWebpack" BeforeTargets="AfterBuild" Condition=" $(DeployOnBuild) == true ">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn install" ContinueOnError="true" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn build" ContinueOnError="true" />


    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="node_modules\angular-animate\angular-animate.min.js" />
      <DistFiles Include="node_modules\angular-aria\angular-aria.min.js" />
      <DistFiles Include="node_modules\angular-css\angular-css.min.js" />
      <DistFiles Include="node_modules\angular-material\angular-material.min.css" />
      <DistFiles Include="node_modules\angular-material\angular-material.min.js" />
      <DistFiles Include="node_modules\angular-resource\angular-resource.min.js" />
      <DistFiles Include="node_modules\angular-widget-grid\angular-widget-grid.css" />
      <DistFiles Include="node_modules\angular-widget-grid\angular-widget-grid.min.js" />
      <DistFiles Include="node_modules\angular\angular.min.js" />
      <DistFiles Include="node_modules\jquery\dist\jquery.min.js" />
      <DistFiles Include="node_modules\moment\min\moment.min.js" />
      <DistFiles Include="node_modules\multiplexjs\build\multiplex.js" />
      <DistFiles Include="node_modules\multiplexjs\build\multiplex.min.js" />
      <DistFiles Include="$(SpaRoot)*.js" />
      <DistFiles Include="$(SpaRoot)*.html" />
      <DistFiles Include="$(SpaRoot)*.css" />
      <DistFiles Include="$(SpaRoot)app\**\*.css" />
      <DistFiles Include="$(SpaRoot)app\**\*.html" />

      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>

    <Error Text="Yarn build has failed" Condition="'@(DistFiles)' == ''" />
  </Target>


</Project>
